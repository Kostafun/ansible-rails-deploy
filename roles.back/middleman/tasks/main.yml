---

- name: set vars
  set_fact:
    app_path: "/home/{{ user }}/{{ app_name }}"
    home: "/home/{{ user }}"

- name: account | create
  user: 'name={{ user }} shell=/bin/bash'
  register: user_create

- name: account | copy authorized keys
  shell: 'mkdir -p {{ home }}/.ssh -m 700 && cp /root/.ssh/authorized_keys {{ home }}/.ssh && chown -R {{ user }}:{{ user }} {{ home }}/.ssh'
  when: user_create|changed

- file: path="{{ app_name }}" state=directory
  become: yes
  become_user: '{{ user }}'

- name: build project with middleman
  local_action: shell bash --login -c 'cd ../ && middleman build'

- name: copy to build dir
  local_action: shell bash --login -c 'cd ../ && cp ./articles ./build/ -r'

- name: zip build dir
  local_action: shell bash --login -c 'cd ../ && rm -f build.tgz && tar -cvzf build.tgz build/*'

- name: upload zipped
  copy: src="../build.tgz" dest="{{ app_path }}/build.tgz"
  become: yes
  become_user: '{{ user }}'

- name: remove build dir
  file: path='{{ app_path }}/build' state=absent

- name: Nginx | Configure apps
  template: src=nginx-app.conf dest=/etc/nginx/sites-available/{{ app_name }}.conf group=www-data owner=www-data force=yes

- name: Nginx | Enable apps
  file: path=/etc/nginx/sites-enabled/{{ app_name }}.conf src=/etc/nginx/sites-available/{{ app_name }}.conf state=link
  ignore_errors: yes

- name: unzip build
  shell: bash --login -c 'cd {{ app_path }} && tar zxf build.tgz'
  become: yes
  become_user: '{{ user }}'
  notify:
    - restart app
    - restart nginx